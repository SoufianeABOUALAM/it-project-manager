# Generated by Django 5.2.5 on 2025-09-05 23:21

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("projects", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="NetworkEquipment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nom spécifique de l'article.", max_length=255
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("supplier", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "fixed_cost_eur",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "fixed_cost_mad",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "monthly_cost_eur",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "monthly_cost_mad",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "equipment_type",
                    models.CharField(
                        choices=[
                            ("SWITCH", "Switch"),
                            ("ROUTER", "Router"),
                            ("FIREWALL", "Firewall"),
                            ("AP", "Access Point"),
                            ("UPS", "UPS"),
                            ("OTHER", "Other"),
                        ],
                        default="OTHER",
                        max_length=20,
                    ),
                ),
                (
                    "port_count",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Nombre de ports (ex: 8, 16, 24).",
                        null=True,
                    ),
                ),
                (
                    "speed",
                    models.CharField(
                        blank=True,
                        help_text="Vitesse des ports (ex: '1Gbps', '10Gbps').",
                        max_length=50,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ServerEquipment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nom spécifique de l'article.", max_length=255
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("supplier", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "fixed_cost_eur",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "fixed_cost_mad",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "monthly_cost_eur",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "monthly_cost_mad",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "rack_units",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Hauteur en unités de rack (U).",
                        null=True,
                    ),
                ),
                (
                    "cpu",
                    models.CharField(
                        blank=True,
                        help_text="Modèle du processeur (CPU).",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "ram_gb",
                    models.PositiveIntegerField(
                        blank=True, help_text="Mémoire vive (RAM) en GB.", null=True
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nom spécifique de l'article.", max_length=255
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("supplier", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "fixed_cost_eur",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "fixed_cost_mad",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "monthly_cost_eur",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "monthly_cost_mad",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("INTERNET", "Internet Connection"),
                            ("INSTALLATION", "Installation"),
                            ("CONFIGURATION", "Configuration"),
                            ("SUPPORT", "Support Contract"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "bandwidth_mbps",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Bande passante en Mbps (pour Internet).",
                        null=True,
                    ),
                ),
                (
                    "sla_response_hours",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Temps de réponse (SLA) en heures.",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SoftwareLicense",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nom spécifique de l'article.", max_length=255
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("supplier", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "fixed_cost_eur",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "fixed_cost_mad",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "monthly_cost_eur",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "monthly_cost_mad",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "license_type",
                    models.CharField(
                        choices=[
                            ("PERPETUAL", "Perpetual"),
                            ("SUBSCRIPTION", "Subscription"),
                        ],
                        default="SUBSCRIPTION",
                        max_length=20,
                    ),
                ),
                (
                    "subscription_period",
                    models.CharField(
                        blank=True,
                        choices=[("MONTHLY", "Monthly"), ("ANNUAL", "Annual")],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "user_limit",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Nombre maximum d'utilisateurs.",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserDevice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nom spécifique de l'article.", max_length=255
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("supplier", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "fixed_cost_eur",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "fixed_cost_mad",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "monthly_cost_eur",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "monthly_cost_mad",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "device_type",
                    models.CharField(
                        choices=[
                            ("LAPTOP", "Laptop"),
                            ("DESKTOP", "Desktop"),
                            ("PRINTER", "Printer"),
                            ("MONITOR", "Monitor"),
                            ("PHONE", "Phone"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "screen_size",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Taille de l'écran en pouces.",
                        max_digits=4,
                        null=True,
                    ),
                ),
                (
                    "storage_gb",
                    models.PositiveIntegerField(
                        blank=True, help_text="Capacité de stockage en GB.", null=True
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.AlterModelOptions(
            name="project",
            options={},
        ),
        migrations.RenameField(
            model_name="project",
            old_name="user",
            new_name="created_by",
        ),
        migrations.RemoveField(
            model_name="project",
            name="access_points",
        ),
        migrations.RemoveField(
            model_name="project",
            name="addresses",
        ),
        migrations.RemoveField(
            model_name="project",
            name="created_at",
        ),
        migrations.RemoveField(
            model_name="project",
            name="desktop_bureautique",
        ),
        migrations.RemoveField(
            model_name="project",
            name="desktop_technique",
        ),
        migrations.RemoveField(
            model_name="project",
            name="end_date",
        ),
        migrations.RemoveField(
            model_name="project",
            name="entity",
        ),
        migrations.RemoveField(
            model_name="project",
            name="file_server_needed",
        ),
        migrations.RemoveField(
            model_name="project",
            name="gps_coordinates",
        ),
        migrations.RemoveField(
            model_name="project",
            name="internet_speed",
        ),
        migrations.RemoveField(
            model_name="project",
            name="laptop_bureautique",
        ),
        migrations.RemoveField(
            model_name="project",
            name="laptop_technique",
        ),
        migrations.RemoveField(
            model_name="project",
            name="local_applications",
        ),
        migrations.RemoveField(
            model_name="project",
            name="local_apps_description",
        ),
        migrations.RemoveField(
            model_name="project",
            name="number_of_users",
        ),
        migrations.RemoveField(
            model_name="project",
            name="printers",
        ),
        migrations.RemoveField(
            model_name="project",
            name="start_date",
        ),
        migrations.RemoveField(
            model_name="project",
            name="status",
        ),
        migrations.RemoveField(
            model_name="project",
            name="total_cost_france",
        ),
        migrations.RemoveField(
            model_name="project",
            name="total_cost_morocco",
        ),
        migrations.RemoveField(
            model_name="project",
            name="updated_at",
        ),
        migrations.RemoveField(
            model_name="project",
            name="video_conference",
        ),
        migrations.RemoveField(
            model_name="project",
            name="workstations",
        ),
        migrations.AddField(
            model_name="project",
            name="company_name",
            field=models.CharField(blank=True, default="", max_length=255),
        ),
        migrations.AlterField(
            model_name="project",
            name="name",
            field=models.CharField(max_length=255),
        ),
        migrations.CreateModel(
            name="ProjectNetworkItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(default=1)),
                ("source", models.CharField(max_length=50)),
                (
                    "equipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.networkequipment",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.project",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="project",
            name="network_equipment",
            field=models.ManyToManyField(
                through="projects.ProjectNetworkItem", to="projects.networkequipment"
            ),
        ),
        migrations.CreateModel(
            name="ProjectServerItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(default=1)),
                ("source", models.CharField(max_length=50)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.project",
                    ),
                ),
                (
                    "equipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.serverequipment",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="project",
            name="server_equipment",
            field=models.ManyToManyField(
                through="projects.ProjectServerItem", to="projects.serverequipment"
            ),
        ),
        migrations.CreateModel(
            name="ProjectServiceItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(default=1)),
                ("source", models.CharField(max_length=50)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.project",
                    ),
                ),
                (
                    "equipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.service",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="project",
            name="services",
            field=models.ManyToManyField(
                through="projects.ProjectServiceItem", to="projects.service"
            ),
        ),
        migrations.CreateModel(
            name="ProjectSoftwareItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(default=1)),
                ("source", models.CharField(max_length=50)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.project",
                    ),
                ),
                (
                    "equipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.softwarelicense",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="project",
            name="software_licenses",
            field=models.ManyToManyField(
                through="projects.ProjectSoftwareItem", to="projects.softwarelicense"
            ),
        ),
        migrations.CreateModel(
            name="ProjectUserDeviceItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(default=1)),
                ("source", models.CharField(max_length=50)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.project",
                    ),
                ),
                (
                    "equipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.userdevice",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="project",
            name="user_devices",
            field=models.ManyToManyField(
                through="projects.ProjectUserDeviceItem", to="projects.userdevice"
            ),
        ),
    ]
