# Generated by Django 5.2.6 on 2025-09-23 14:15

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InfrastructureEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Nom spécifique de l'article.", max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('supplier', models.CharField(blank=True, max_length=255, null=True)),
                ('fixed_cost_eur', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('fixed_cost_mad', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monthly_cost_eur', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monthly_cost_mad', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('infra_type', models.CharField(choices=[('RACK', 'Rack'), ('UPS', 'Onduleur'), ('CABLE', 'Câble réseau'), ('KVM', 'KVM Console/Switch'), ('ACCESSORY', 'Accessoire'), ('OTHER', 'Autre')], default='OTHER', max_length=20)),
                ('length_m', models.DecimalField(blank=True, decimal_places=2, help_text='Longueur (m) — pour câbles', max_digits=6, null=True)),
                ('port_count', models.PositiveIntegerField(blank=True, help_text='Nombre de ports (pour KVM)', null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NetworkEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Nom spécifique de l'article.", max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('supplier', models.CharField(blank=True, max_length=255, null=True)),
                ('fixed_cost_eur', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('fixed_cost_mad', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monthly_cost_eur', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monthly_cost_mad', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('equipment_type', models.CharField(choices=[('SWITCH', 'Switch'), ('ROUTER', 'Router'), ('FIREWALL', 'Firewall'), ('AP', 'Access Point'), ('UPS', 'UPS'), ('OTHER', 'Other')], default='OTHER', max_length=20)),
                ('port_count', models.PositiveIntegerField(blank=True, help_text='Nombre de ports.', null=True)),
                ('speed', models.CharField(blank=True, help_text='Vitesse des ports (ex: 1Gbps).', max_length=50, null=True)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServerEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Nom spécifique de l'article.", max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('supplier', models.CharField(blank=True, max_length=255, null=True)),
                ('fixed_cost_eur', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('fixed_cost_mad', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monthly_cost_eur', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monthly_cost_mad', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('rack_units', models.PositiveIntegerField(blank=True, help_text='Hauteur en U.', null=True)),
                ('cpu', models.CharField(blank=True, help_text='CPU modèle.', max_length=100, null=True)),
                ('ram_gb', models.PositiveIntegerField(blank=True, help_text='RAM en GB.', null=True)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Nom spécifique de l'article.", max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('supplier', models.CharField(blank=True, max_length=255, null=True)),
                ('fixed_cost_eur', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('fixed_cost_mad', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monthly_cost_eur', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monthly_cost_mad', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('service_type', models.CharField(choices=[('INTERNET', 'Internet Connection'), ('INSTALLATION', 'Installation'), ('CONFIGURATION', 'Configuration'), ('SUPPORT', 'Support Contract')], max_length=20)),
                ('bandwidth_mbps', models.PositiveIntegerField(blank=True, null=True)),
                ('sla_response_hours', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SoftwareLicense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Nom spécifique de l'article.", max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('supplier', models.CharField(blank=True, max_length=255, null=True)),
                ('fixed_cost_eur', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('fixed_cost_mad', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monthly_cost_eur', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monthly_cost_mad', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('license_type', models.CharField(choices=[('PERPETUAL', 'Perpetual'), ('SUBSCRIPTION', 'Subscription')], default='SUBSCRIPTION', max_length=20)),
                ('subscription_period', models.CharField(blank=True, choices=[('MONTHLY', 'Monthly'), ('ANNUAL', 'Annual')], max_length=20, null=True)),
                ('user_limit', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Nom spécifique de l'article.", max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('supplier', models.CharField(blank=True, max_length=255, null=True)),
                ('fixed_cost_eur', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('fixed_cost_mad', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monthly_cost_eur', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monthly_cost_mad', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('device_type', models.CharField(choices=[('LAPTOP', 'Laptop'), ('DESKTOP', 'Desktop'), ('PRINTER', 'Printer'), ('MONITOR', 'Monitor'), ('PHONE', 'Phone')], max_length=20)),
                ('screen_size', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('storage_gb', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VisioEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Nom spécifique de l'article.", max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('supplier', models.CharField(blank=True, max_length=255, null=True)),
                ('fixed_cost_eur', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('fixed_cost_mad', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monthly_cost_eur', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('monthly_cost_mad', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('visio_type', models.CharField(choices=[('HARDWARE_CODEC', 'Hardware codec (room system)'), ('SOFTWARE', 'Software (Teams/Zoom)'), ('ROOM_SYSTEM', 'Room system'), ('SIP_H323', 'SIP / H.323'), ('OTHER', 'Autre')], default='OTHER', max_length=30)),
                ('supported_users', models.PositiveIntegerField(blank=True, help_text="Nombre d'utilisateurs supportés (approx.)", null=True)),
                ('ports', models.PositiveIntegerField(blank=True, help_text='Nombre de ports (si applicable)', null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('company_name', models.CharField(blank=True, default='', max_length=255)),
                ('entity', models.CharField(blank=True, choices=[('BOUYGUES_CONSTRUCTION', 'Bouygues Construction'), ('BOUYGUES_IMMOBILIER', 'Bouygues Immobilier'), ('COLAS', 'Colas'), ('TF1', 'TF1'), ('BOUYGUES_ENERGIES_SERVICES', 'Bouygues Energies & Services'), ('EQUANS', 'Equans'), ('BOUYGUES_TELECOM', 'Bouygues Telecom'), ('BOUYGUES_SA', 'Bouygues SA (Holding)'), ('OTHER', 'Autre')], max_length=50, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('number_of_users', models.PositiveIntegerField(default=0)),
                ('pc_type', models.CharField(choices=[('LAPTOP_ONLY', 'Laptop uniquement'), ('DESKTOP_ONLY', 'Desktop uniquement'), ('BOTH', 'Les deux')], default='BOTH', max_length=20)),
                ('num_laptop_office', models.PositiveIntegerField(default=0, help_text='Nombre de laptop bureautique')),
                ('num_laptop_tech', models.PositiveIntegerField(default=0, help_text='Nombre de laptop technique')),
                ('num_desktop_office', models.PositiveIntegerField(default=0, help_text='Nombre de desktop bureautique')),
                ('num_desktop_tech', models.PositiveIntegerField(default=0, help_text='Nombre de desktop technique')),
                ('local_apps', models.BooleanField(default=False, help_text='Y a-t-il des applications locales ?')),
                ('local_apps_list', models.TextField(blank=True, default='', help_text='Liste des applications locales (ex: SAGE, GMAO)')),
                ('file_server', models.BooleanField(default=False, help_text='Serveur de fichiers présent ?')),
                ('site_addresses', models.TextField(blank=True, default='', help_text='Adresses de chaque site/atelier')),
                ('gps_coordinates', models.CharField(blank=True, default='', help_text='Coordonnées GPS (ex: 24.793387, 46.654397)', max_length=100)),
                ('internet_line_type', models.CharField(blank=True, choices=[('FO', 'FO'), ('VSAT', 'VSAT'), ('STARLINK', 'STARLINK'), ('OTHER', 'Autre')], max_length=20, null=True)),
                ('internet_line_speed', models.CharField(blank=True, default='', help_text='Ex: 100Mbps', max_length=50)),
                ('num_printers', models.PositiveIntegerField(default=0)),
                ('num_traceau', models.PositiveIntegerField(default=0, help_text='Nombre de traceau')),
                ('num_videoconference', models.PositiveIntegerField(default=0)),
                ('num_aps', models.PositiveIntegerField(default=0, help_text="Nombre de points d'accès (AP)")),
                ('num_switch_24', models.PositiveIntegerField(default=0, help_text='Nombre de switch 24 ports')),
                ('num_switch_48', models.PositiveIntegerField(default=0, help_text='Nombre de switch 48 ports')),
                ('visio_type', models.CharField(blank=True, choices=[('HARDWARE_CODEC', 'Hardware codec (room system)'), ('SOFTWARE', 'Software (Teams/Zoom)'), ('ROOM_SYSTEM', 'Room system'), ('SIP_H323', 'SIP / H.323'), ('OTHER', 'Autre')], help_text='Type de visioconférence (ex: room system, software, SIP/H.323)', max_length=30, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('approved', 'Approved'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='draft', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('progress', models.PositiveIntegerField(default=0, help_text='Progress percentage (0-100)')),
                ('total_cost_france', models.DecimalField(decimal_places=2, default=0, help_text='Total cost in EUR', max_digits=12)),
                ('total_cost_morocco', models.DecimalField(decimal_places=2, default=0, help_text='Total cost in MAD', max_digits=12)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectInfrastructureItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('source', models.CharField(blank=True, default='', max_length=50)),
                ('purchase_location', models.CharField(choices=[('FR', 'France'), ('LOCAL', 'Local')], default='FR', max_length=10)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.infrastructureequipment')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
            options={
                'unique_together': {('project', 'equipment')},
            },
        ),
        migrations.AddField(
            model_name='project',
            name='infrastructure_equipment',
            field=models.ManyToManyField(blank=True, through='projects.ProjectInfrastructureItem', to='projects.infrastructureequipment'),
        ),
        migrations.CreateModel(
            name='ProjectNetworkItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('source', models.CharField(blank=True, default='', max_length=50)),
                ('purchase_location', models.CharField(choices=[('FR', 'France'), ('LOCAL', 'Local')], default='FR', max_length=10)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.networkequipment')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
            options={
                'unique_together': {('project', 'equipment')},
            },
        ),
        migrations.AddField(
            model_name='project',
            name='network_equipment',
            field=models.ManyToManyField(blank=True, through='projects.ProjectNetworkItem', to='projects.networkequipment'),
        ),
        migrations.CreateModel(
            name='ProjectServerItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('source', models.CharField(blank=True, default='', max_length=50)),
                ('purchase_location', models.CharField(choices=[('FR', 'France'), ('LOCAL', 'Local')], default='FR', max_length=10)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.serverequipment')),
            ],
            options={
                'unique_together': {('project', 'equipment')},
            },
        ),
        migrations.AddField(
            model_name='project',
            name='server_equipment',
            field=models.ManyToManyField(blank=True, through='projects.ProjectServerItem', to='projects.serverequipment'),
        ),
        migrations.CreateModel(
            name='ProjectServiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('source', models.CharField(blank=True, default='', max_length=50)),
                ('purchase_location', models.CharField(choices=[('FR', 'France'), ('LOCAL', 'Local')], default='FR', max_length=10)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.service')),
            ],
            options={
                'unique_together': {('project', 'equipment')},
            },
        ),
        migrations.AddField(
            model_name='project',
            name='services',
            field=models.ManyToManyField(blank=True, through='projects.ProjectServiceItem', to='projects.service'),
        ),
        migrations.CreateModel(
            name='ProjectSoftwareItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('source', models.CharField(blank=True, default='', max_length=50)),
                ('purchase_location', models.CharField(choices=[('FR', 'France'), ('LOCAL', 'Local')], default='FR', max_length=10)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.softwarelicense')),
            ],
            options={
                'unique_together': {('project', 'equipment')},
            },
        ),
        migrations.AddField(
            model_name='project',
            name='software_licenses',
            field=models.ManyToManyField(blank=True, through='projects.ProjectSoftwareItem', to='projects.softwarelicense'),
        ),
        migrations.CreateModel(
            name='ProjectUserDeviceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('source', models.CharField(blank=True, default='', max_length=50)),
                ('purchase_location', models.CharField(choices=[('FR', 'France'), ('LOCAL', 'Local')], default='FR', max_length=10)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.userdevice')),
            ],
            options={
                'unique_together': {('project', 'equipment')},
            },
        ),
        migrations.AddField(
            model_name='project',
            name='user_devices',
            field=models.ManyToManyField(blank=True, through='projects.ProjectUserDeviceItem', to='projects.userdevice'),
        ),
        migrations.CreateModel(
            name='ProjectVisioItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('source', models.CharField(blank=True, default='', max_length=50)),
                ('purchase_location', models.CharField(choices=[('FR', 'France'), ('LOCAL', 'Local')], default='FR', max_length=10)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.visioequipment')),
            ],
            options={
                'unique_together': {('project', 'equipment')},
            },
        ),
        migrations.AddField(
            model_name='project',
            name='visio_equipment',
            field=models.ManyToManyField(blank=True, through='projects.ProjectVisioItem', to='projects.visioequipment'),
        ),
    ]
